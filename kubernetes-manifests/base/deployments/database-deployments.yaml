---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-order
spec:
  selector:
    matchLabels:
      app: mysql-order
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql-order
    spec:
      containers:
      - name: mysql
        image: mysql:latest
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-order-secret
              key: MYSQL_ROOT_PASSWORD
        - name: MYSQL_DATABASE
          value: order_service
        - name: MYSQL_USER
          value: ibatulanand
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-order-secret
              key: MYSQL_PASSWORD
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-order-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-order-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-order-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-inventory
spec:
  selector:
    matchLabels:
      app: mysql-inventory
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql-inventory
    spec:
      containers:
      - name: mysql
        image: mysql:latest
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-inventory-secret
              key: MYSQL_ROOT_PASSWORD
        - name: MYSQL_DATABASE
          value: inventory_service
        - name: MYSQL_USER
          value: ibatulanand
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-inventory-secret
              key: MYSQL_PASSWORD
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-inventory-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-inventory-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-inventory-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
spec:
  selector:
    matchLabels:
      app: mongo
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo:latest
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-persistent-storage
          mountPath: /data/db
      volumes:
      - name: mongo-persistent-storage
        persistentVolumeClaim:
          claimName: mongo-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak-mysql
spec:
  selector:
    matchLabels:
      app: keycloak-mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: keycloak-mysql
    spec:
      containers:
      - name: mysql
        image: mysql:latest
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-mysql-secret
              key: MYSQL_ROOT_PASSWORD
        - name: MYSQL_DATABASE
          value: keycloak
        - name: MYSQL_USER
          value: keycloak
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-mysql-secret
              key: MYSQL_PASSWORD
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: keycloak-mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: keycloak-mysql-persistent-storage
        persistentVolumeClaim:
          claimName: keycloak-mysql-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
spec:
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - name: zookeeper
        image: confluentinc/cp-zookeeper:latest
        env:
        - name: ZOOKEEPER_CLIENT_PORT
          value: "2181"
        - name: ZOOKEEPER_TICK_TIME
          value: "2000"
        ports:
        - containerPort: 2181
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: confluentinc/cp-kafka:latest
        env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zookeeper:2181"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://kafka:29092"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        ports:
        - containerPort: 9092
        - containerPort: 29092
